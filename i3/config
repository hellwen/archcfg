# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $alt Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# bindsym $mod+Return exec "urxvt -fg lightgray -bg black -tr -tint lightgray -sh 30"
bindsym $mod+Return exec "xterm"
# default terminal
#bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill


# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run
bindsym $mod+d exec rofi -terminal xterm -show run
bindsym $mod+w exec rofi -terminal xterm -show window
bindsym $mod+s exec rofi -terminal xterm -show ssh

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
#bindsym $mod+Left focus left
#bindsym $mod+Down focus down
#bindsym $mod+Up focus up
#bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
#bindsym $mod+Shift+Left move left
#bindsym $mod+Shift+Down move down
#bindsym $mod+Shift+Up move up
#bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
# enter fullscreen to global
bindsym $mod+Shift+f fullscreen toggle global

# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
#bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
bindsym $mod+$alt+e layout stacking

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle
# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# change border style
default_border pixel
default_floating_border normal
bindsym $mod+t border toggle

# focus the parent container
# bindsym $mod+p focus parent
# focus the child container
# bindsym $mod+c focus child

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.


        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        position top
        # status_command i3status -c "~/.i3/i3status.conf"
        # status_command i3blocks -c ~/.i3/i3blocks.conf
        status_command i3blocks
        tray_output primary
}

## my define

# lock window
bindsym $mod+Ctrl+l exec "i3lock -i ~/.archcfg/i3/i3lock.png"
bindsym $mod+$alt+l exec "i3lock -i ~/.archcfg/i3/i3lock.png && systemctl suspend"

exec --no-startup-id xautolock -time 5 -locker "scrot /tmp/screen_locked.png && convert /tmp/screen_locked.png -blur 0x8 -channel RGBA /tmp/screen_locked.png && i3lock -i /tmp/screen_locked.png" -detectsleep
exec --no-startup-id xautolock -time 60 -locker "systemctl suspend" -detectsleep

# screen shot
## select range
bindsym --release Print exec "scrot -s ~/Pictures/$(date +%y%m%d_%H%M%S)_ss.png -e 'xclip -selection c -t image/png < $f'"
## current window
bindsym --release $mod+Print exec "scrot -u ~/Pictures/$(date +%y%m%d_%H%M%S)_ss.png -e 'xclip -selection c -t image/png < $f'"

# alsamixer
bindsym XF86AudioRaiseVolume exec --no-startup-id "amixer -c 1 -q sset Master 5%+"
bindsym XF86AudioLowerVolume exec --no-startup-id "amixer -c 1 -q sset Master 5%-"
bindsym XF86AudioMute exec --no-startup-id "amixer -c 1 -q sset Master toggle"

bindsym XF86MonBrightnessUp exec "xbacklight -inc 20"
bindsym XF86MonBrightnessDown exec "xbacklight -dec 20"

bindsym XF86AudioPlay exec "playerctl play"
bindsym XF86AudioPause exec "playerctl pause"
bindsym XF86AudioNext exec "playerctl next"
bindsym XF86AudioPrev exec "playerctl previous"

# automatically putting clients on specific workspaces
assign [class="chromium"] 1
for_window [class="abc"] floating enable

# automatically putting workspaces on specific screens
#workspace 1 output HDMI
#workspace 2 output DP2-3
#workspace 3 output DP2-3
#workspace 4 output DP2-3
#workspace 5 output eDP1
#workspace 6 output DP2-1
#workspace 7 output DP2-1
#workspace 8 output DP2-1
#workspace 9 output HDMI2
#workspace 0 output HDMI2


# auto start
#exec --no-startup-id fcitx

#===power manager===
mode "$mode_system" {
    bindsym l exec --no-startup-id i3lock -c '#000000', mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym o exec --no-startup-id systemctl poweroff, mode "default"
    bindsym Escape mode "default"
}

set $mode_system Select: Lock(l) Exit(e) Reboot(r) Poweroff(o) Cancel(Esc)
bindsym $mod+Shift+x mode "$mode_system"

# move workspace
mode "Move workspace" {
    # Move current workspace to different output
    bindsym Left move workspace to output left
    bindsym Right move workspace to output right

    bindsym h move workspace to output left
    bindsym l move workspace to output right

    bindsym Escape mode "default"
}

bindsym $mod+m mode "Move workspace"
# bindsym $mod+m move workspace to output right
# bindsym $mod+Shift+m mode "Move workspace"
